{
  "openapi": "3.0.2",
  "info": {
    "title": "Service for namespace CatalogService",
    "description": "This service is located at [/catalog/](/catalog/)",
    "version": ""
  },
  "x-sap-api-type": "ODATAV4",
  "x-odata-version": "4.0",
  "x-sap-shortText": "Service for namespace CatalogService",
  "servers": [
    {
       "url": "/catalog"
    }
  ],
  "tags": [
    {
      "name": "Interactions_Header"
    },
    {
      "name": "Interactions_Items"
    },
    {
      "name": "WorkPerformance"
    },
    {
      "name": "ActualWorkTime"
    },
    {
      "name": "EquipmentActualTime"
    },
    {
      "name": "OtherActualTimes"
    },
    {
      "name": "ProductPerformance"
    },
    {
      "name": "ProductResults"
    },
    {
      "name": "DefectiveProductResults"
    },
    {
      "name": "BasicOrderMasterJournalReceived"
    },
    {
      "name": "BasicOrderMasterJournalReceivedB"
    },
    {
      "name": "BasicOrderMasterJournalReceivedR"
    },
    {
      "name": "Countries"
    },
    {
      "name": "Countries_texts"
    }
  ],
  "paths": {
    "/Interactions_Header": {
      "get": {
        "summary": "Retrieve a list of interactions_ header.",
        "tags": [
          "Interactions_Header"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "PARTNER",
                  "PARTNER desc",
                  "LOG_DATE",
                  "LOG_DATE desc",
                  "BPCOUNTRY_code",
                  "BPCOUNTRY_code desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "PARTNER",
                  "LOG_DATE",
                  "BPCOUNTRY_code"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "ITEMS",
                  "BPCOUNTRY"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved interactions_ header",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Interactions_Header",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogService.Interactions_Header"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single interactions_ header.",
        "tags": [
          "Interactions_Header"
        ],
        "requestBody": {
          "description": "New interactions_ header",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogService.Interactions_Header-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created interactions_ header",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogService.Interactions_Header"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Interactions_Header({ID})": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single interactions_ header.",
        "tags": [
          "Interactions_Header"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "PARTNER",
                  "LOG_DATE",
                  "BPCOUNTRY_code"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "ITEMS",
                  "BPCOUNTRY"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved interactions_ header",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogService.Interactions_Header"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single interactions_ header.",
        "tags": [
          "Interactions_Header"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogService.Interactions_Header-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single interactions_ header.",
        "tags": [
          "Interactions_Header"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Interactions_Header({ID})/ITEMS": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a list of i t e m s of a interactions_ header.",
        "tags": [
          "Interactions_Header",
          "Interactions_Items"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "INTHeader_ID",
                  "INTHeader_ID desc",
                  "TEXT_ID",
                  "TEXT_ID desc",
                  "LANGU",
                  "LANGU desc",
                  "LOGTEXT",
                  "LOGTEXT desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "INTHeader_ID",
                  "TEXT_ID",
                  "LANGU",
                  "LOGTEXT"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "INTHeader"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved i t e m s",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Interactions_Items",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogService.Interactions_Items"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single i t e m  of a interactions_ header.",
        "tags": [
          "Interactions_Header",
          "Interactions_Items"
        ],
        "requestBody": {
          "description": "New i t e m ",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogService.Interactions_Items-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created i t e m ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogService.Interactions_Items"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Interactions_Header({ID})/BPCOUNTRY": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieve b p c o u n t r y of a interactions_ header.",
        "tags": [
          "Interactions_Header",
          "Countries"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved b p c o u n t r y",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogService.Countries"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Interactions_Items": {
      "get": {
        "summary": "Retrieve a list of interactions_ items.",
        "tags": [
          "Interactions_Items"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "INTHeader_ID",
                  "INTHeader_ID desc",
                  "TEXT_ID",
                  "TEXT_ID desc",
                  "LANGU",
                  "LANGU desc",
                  "LOGTEXT",
                  "LOGTEXT desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "INTHeader_ID",
                  "TEXT_ID",
                  "LANGU",
                  "LOGTEXT"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "INTHeader"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved interactions_ items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Interactions_Items",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogService.Interactions_Items"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single interactions_ item.",
        "tags": [
          "Interactions_Items"
        ],
        "requestBody": {
          "description": "New interactions_ item",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogService.Interactions_Items-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created interactions_ item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogService.Interactions_Items"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Interactions_Items(INTHeader_ID={INTHeader_ID},TEXT_ID='{TEXT_ID}')": {
      "parameters": [
        {
          "description": "key: INTHeader_ID",
          "in": "path",
          "name": "INTHeader_ID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        },
        {
          "description": "key: TEXT_ID",
          "in": "path",
          "name": "TEXT_ID",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 10
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single interactions_ item.",
        "tags": [
          "Interactions_Items"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "INTHeader_ID",
                  "TEXT_ID",
                  "LANGU",
                  "LOGTEXT"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "INTHeader"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved interactions_ item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogService.Interactions_Items"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single interactions_ item.",
        "tags": [
          "Interactions_Items"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogService.Interactions_Items-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single interactions_ item.",
        "tags": [
          "Interactions_Items"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Interactions_Items(INTHeader_ID={INTHeader_ID},TEXT_ID='{TEXT_ID}')/INTHeader": {
      "parameters": [
        {
          "description": "key: INTHeader_ID",
          "in": "path",
          "name": "INTHeader_ID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        },
        {
          "description": "key: TEXT_ID",
          "in": "path",
          "name": "TEXT_ID",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 10
          }
        }
      ],
      "get": {
        "summary": "Retrieve i n t header of a interactions_ item.",
        "tags": [
          "Interactions_Items",
          "Interactions_Header"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "PARTNER",
                  "LOG_DATE",
                  "BPCOUNTRY_code"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "ITEMS",
                  "BPCOUNTRY"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved i n t header",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogService.Interactions_Header"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/WorkPerformance": {
      "get": {
        "summary": "Retrieve a list of work performance.",
        "tags": [
          "WorkPerformance"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "WorkPerformanceID",
                  "WorkPerformanceID desc",
                  "DailyReportDate",
                  "DailyReportDate desc",
                  "DayAndNight",
                  "DayAndNight desc",
                  "Group",
                  "Group desc",
                  "FacilityNo",
                  "FacilityNo desc",
                  "CreateUser",
                  "CreateUser desc",
                  "CreateDate",
                  "CreateDate desc",
                  "UpdateUser",
                  "UpdateUser desc",
                  "UpdateDate",
                  "UpdateDate desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "WorkPerformanceID",
                  "DailyReportDate",
                  "DayAndNight",
                  "Group",
                  "FacilityNo",
                  "CreateUser",
                  "CreateDate",
                  "UpdateUser",
                  "UpdateDate"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved work performance",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of WorkPerformance",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogService.WorkPerformance"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single work performance.",
        "tags": [
          "WorkPerformance"
        ],
        "requestBody": {
          "description": "New work performance",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogService.WorkPerformance-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created work performance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogService.WorkPerformance"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/WorkPerformance({WorkPerformanceID})": {
      "parameters": [
        {
          "description": "key: WorkPerformanceID",
          "in": "path",
          "name": "WorkPerformanceID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single work performance.",
        "tags": [
          "WorkPerformance"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "WorkPerformanceID",
                  "DailyReportDate",
                  "DayAndNight",
                  "Group",
                  "FacilityNo",
                  "CreateUser",
                  "CreateDate",
                  "UpdateUser",
                  "UpdateDate"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved work performance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogService.WorkPerformance"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single work performance.",
        "tags": [
          "WorkPerformance"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogService.WorkPerformance-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single work performance.",
        "tags": [
          "WorkPerformance"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/ActualWorkTime": {
      "get": {
        "summary": "Retrieve a list of actual work time.",
        "tags": [
          "ActualWorkTime"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ActualWorkTimeID",
                  "ActualWorkTimeID desc",
                  "WorkPerformanceID",
                  "WorkPerformanceID desc",
                  "StartTime",
                  "StartTime desc",
                  "EndTime",
                  "EndTime desc",
                  "CreateUser",
                  "CreateUser desc",
                  "CreateDate",
                  "CreateDate desc",
                  "UpdateUser",
                  "UpdateUser desc",
                  "UpdateDate",
                  "UpdateDate desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ActualWorkTimeID",
                  "WorkPerformanceID",
                  "StartTime",
                  "EndTime",
                  "CreateUser",
                  "CreateDate",
                  "UpdateUser",
                  "UpdateDate"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved actual work time",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of ActualWorkTime",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogService.ActualWorkTime"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single actual work time.",
        "tags": [
          "ActualWorkTime"
        ],
        "requestBody": {
          "description": "New actual work time",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogService.ActualWorkTime-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created actual work time",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogService.ActualWorkTime"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/ActualWorkTime({ActualWorkTimeID})": {
      "parameters": [
        {
          "description": "key: ActualWorkTimeID",
          "in": "path",
          "name": "ActualWorkTimeID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single actual work time.",
        "tags": [
          "ActualWorkTime"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ActualWorkTimeID",
                  "WorkPerformanceID",
                  "StartTime",
                  "EndTime",
                  "CreateUser",
                  "CreateDate",
                  "UpdateUser",
                  "UpdateDate"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved actual work time",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogService.ActualWorkTime"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single actual work time.",
        "tags": [
          "ActualWorkTime"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogService.ActualWorkTime-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single actual work time.",
        "tags": [
          "ActualWorkTime"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/EquipmentActualTime": {
      "get": {
        "summary": "Retrieve a list of equipment actual time.",
        "tags": [
          "EquipmentActualTime"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "EquipmentActualTimeID",
                  "EquipmentActualTimeID desc",
                  "WorkPerformanceID",
                  "WorkPerformanceID desc",
                  "StartTime",
                  "StartTime desc",
                  "EndTime",
                  "EndTime desc",
                  "CreateUser",
                  "CreateUser desc",
                  "CreateDate",
                  "CreateDate desc",
                  "UpdateUser",
                  "UpdateUser desc",
                  "UpdateDate",
                  "UpdateDate desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "EquipmentActualTimeID",
                  "WorkPerformanceID",
                  "StartTime",
                  "EndTime",
                  "CreateUser",
                  "CreateDate",
                  "UpdateUser",
                  "UpdateDate"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved equipment actual time",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of EquipmentActualTime",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogService.EquipmentActualTime"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single equipment actual time.",
        "tags": [
          "EquipmentActualTime"
        ],
        "requestBody": {
          "description": "New equipment actual time",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogService.EquipmentActualTime-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created equipment actual time",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogService.EquipmentActualTime"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/EquipmentActualTime({EquipmentActualTimeID})": {
      "parameters": [
        {
          "description": "key: EquipmentActualTimeID",
          "in": "path",
          "name": "EquipmentActualTimeID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single equipment actual time.",
        "tags": [
          "EquipmentActualTime"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "EquipmentActualTimeID",
                  "WorkPerformanceID",
                  "StartTime",
                  "EndTime",
                  "CreateUser",
                  "CreateDate",
                  "UpdateUser",
                  "UpdateDate"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved equipment actual time",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogService.EquipmentActualTime"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single equipment actual time.",
        "tags": [
          "EquipmentActualTime"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogService.EquipmentActualTime-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single equipment actual time.",
        "tags": [
          "EquipmentActualTime"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/OtherActualTimes": {
      "get": {
        "summary": "Retrieve a list of other actual times.",
        "tags": [
          "OtherActualTimes"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "OtherActualTimesID",
                  "OtherActualTimesID desc",
                  "WorkPerformanceID",
                  "WorkPerformanceID desc",
                  "AchievementCode",
                  "AchievementCode desc",
                  "Personnel",
                  "Personnel desc",
                  "StartTime",
                  "StartTime desc",
                  "EndTime",
                  "EndTime desc",
                  "CreateUser",
                  "CreateUser desc",
                  "CreateDate",
                  "CreateDate desc",
                  "UpdateUser",
                  "UpdateUser desc",
                  "UpdateDate",
                  "UpdateDate desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "OtherActualTimesID",
                  "WorkPerformanceID",
                  "AchievementCode",
                  "Personnel",
                  "StartTime",
                  "EndTime",
                  "CreateUser",
                  "CreateDate",
                  "UpdateUser",
                  "UpdateDate"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved other actual times",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of OtherActualTimes",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogService.OtherActualTimes"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single other actual time.",
        "tags": [
          "OtherActualTimes"
        ],
        "requestBody": {
          "description": "New other actual time",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogService.OtherActualTimes-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created other actual time",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogService.OtherActualTimes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/OtherActualTimes({OtherActualTimesID})": {
      "parameters": [
        {
          "description": "key: OtherActualTimesID",
          "in": "path",
          "name": "OtherActualTimesID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single other actual time.",
        "tags": [
          "OtherActualTimes"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "OtherActualTimesID",
                  "WorkPerformanceID",
                  "AchievementCode",
                  "Personnel",
                  "StartTime",
                  "EndTime",
                  "CreateUser",
                  "CreateDate",
                  "UpdateUser",
                  "UpdateDate"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved other actual time",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogService.OtherActualTimes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single other actual time.",
        "tags": [
          "OtherActualTimes"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogService.OtherActualTimes-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single other actual time.",
        "tags": [
          "OtherActualTimes"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/ProductPerformance": {
      "get": {
        "summary": "Retrieve a list of product performance.",
        "tags": [
          "ProductPerformance"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ProductPerformanceID",
                  "ProductPerformanceID desc",
                  "DailyReportDate",
                  "DailyReportDate desc",
                  "DayAndNight",
                  "DayAndNight desc",
                  "Group",
                  "Group desc",
                  "FacilityNo",
                  "FacilityNo desc",
                  "CreateUser",
                  "CreateUser desc",
                  "CreateDate",
                  "CreateDate desc",
                  "UpdateUser",
                  "UpdateUser desc",
                  "UpdateDate",
                  "UpdateDate desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ProductPerformanceID",
                  "DailyReportDate",
                  "DayAndNight",
                  "Group",
                  "FacilityNo",
                  "CreateUser",
                  "CreateDate",
                  "UpdateUser",
                  "UpdateDate"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved product performance",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of ProductPerformance",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogService.ProductPerformance"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single product performance.",
        "tags": [
          "ProductPerformance"
        ],
        "requestBody": {
          "description": "New product performance",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogService.ProductPerformance-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created product performance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogService.ProductPerformance"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/ProductPerformance({ProductPerformanceID})": {
      "parameters": [
        {
          "description": "key: ProductPerformanceID",
          "in": "path",
          "name": "ProductPerformanceID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single product performance.",
        "tags": [
          "ProductPerformance"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ProductPerformanceID",
                  "DailyReportDate",
                  "DayAndNight",
                  "Group",
                  "FacilityNo",
                  "CreateUser",
                  "CreateDate",
                  "UpdateUser",
                  "UpdateDate"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved product performance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogService.ProductPerformance"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single product performance.",
        "tags": [
          "ProductPerformance"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogService.ProductPerformance-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single product performance.",
        "tags": [
          "ProductPerformance"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/ProductResults": {
      "get": {
        "summary": "Retrieve a list of product results.",
        "tags": [
          "ProductResults"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "NumberOfProductionsID",
                  "NumberOfProductionsID desc",
                  "ProductPerformanceID",
                  "ProductPerformanceID desc",
                  "ProductNumber",
                  "ProductNumber desc",
                  "NumberOfSetUps",
                  "NumberOfSetUps desc",
                  "NumberOfProductions",
                  "NumberOfProductions desc",
                  "NumberOfPrograms",
                  "NumberOfPrograms desc",
                  "Message",
                  "Message desc",
                  "CreateUser",
                  "CreateUser desc",
                  "CreateDate",
                  "CreateDate desc",
                  "UpdateUser",
                  "UpdateUser desc",
                  "UpdateDate",
                  "UpdateDate desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "NumberOfProductionsID",
                  "ProductPerformanceID",
                  "ProductNumber",
                  "NumberOfSetUps",
                  "NumberOfProductions",
                  "NumberOfPrograms",
                  "Message",
                  "CreateUser",
                  "CreateDate",
                  "UpdateUser",
                  "UpdateDate"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved product results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of ProductResults",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogService.ProductResults"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single product result.",
        "tags": [
          "ProductResults"
        ],
        "requestBody": {
          "description": "New product result",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogService.ProductResults-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created product result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogService.ProductResults"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/ProductResults({NumberOfProductionsID})": {
      "parameters": [
        {
          "description": "key: NumberOfProductionsID",
          "in": "path",
          "name": "NumberOfProductionsID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single product result.",
        "tags": [
          "ProductResults"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "NumberOfProductionsID",
                  "ProductPerformanceID",
                  "ProductNumber",
                  "NumberOfSetUps",
                  "NumberOfProductions",
                  "NumberOfPrograms",
                  "Message",
                  "CreateUser",
                  "CreateDate",
                  "UpdateUser",
                  "UpdateDate"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved product result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogService.ProductResults"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single product result.",
        "tags": [
          "ProductResults"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogService.ProductResults-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single product result.",
        "tags": [
          "ProductResults"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/DefectiveProductResults": {
      "get": {
        "summary": "Retrieve a list of defective product results.",
        "tags": [
          "DefectiveProductResults"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "NumberOfDefectsID",
                  "NumberOfDefectsID desc",
                  "ProductPerformanceID",
                  "ProductPerformanceID desc",
                  "ProductNumber",
                  "ProductNumber desc",
                  "NumberOfSetUps",
                  "NumberOfSetUps desc",
                  "NumberOfDefects",
                  "NumberOfDefects desc",
                  "BadCauseCodes",
                  "BadCauseCodes desc",
                  "EPRNM",
                  "EPRNM desc",
                  "CreateUser",
                  "CreateUser desc",
                  "CreateDate",
                  "CreateDate desc",
                  "UpdateUser",
                  "UpdateUser desc",
                  "UpdateDate",
                  "UpdateDate desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "NumberOfDefectsID",
                  "ProductPerformanceID",
                  "ProductNumber",
                  "NumberOfSetUps",
                  "NumberOfDefects",
                  "BadCauseCodes",
                  "EPRNM",
                  "CreateUser",
                  "CreateDate",
                  "UpdateUser",
                  "UpdateDate"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved defective product results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of DefectiveProductResults",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogService.DefectiveProductResults"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single defective product result.",
        "tags": [
          "DefectiveProductResults"
        ],
        "requestBody": {
          "description": "New defective product result",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogService.DefectiveProductResults-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created defective product result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogService.DefectiveProductResults"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/DefectiveProductResults({NumberOfDefectsID})": {
      "parameters": [
        {
          "description": "key: NumberOfDefectsID",
          "in": "path",
          "name": "NumberOfDefectsID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single defective product result.",
        "tags": [
          "DefectiveProductResults"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "NumberOfDefectsID",
                  "ProductPerformanceID",
                  "ProductNumber",
                  "NumberOfSetUps",
                  "NumberOfDefects",
                  "BadCauseCodes",
                  "EPRNM",
                  "CreateUser",
                  "CreateDate",
                  "UpdateUser",
                  "UpdateDate"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved defective product result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogService.DefectiveProductResults"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single defective product result.",
        "tags": [
          "DefectiveProductResults"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogService.DefectiveProductResults-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single defective product result.",
        "tags": [
          "DefectiveProductResults"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/BasicOrderMasterJournalReceived": {
      "get": {
        "summary": "Retrieve a list of basic order master journal received.",
        "tags": [
          "BasicOrderMasterJournalReceived"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "BasicOrderMasterJournalReceivedID",
                  "BasicOrderMasterJournalReceivedID desc",
                  "UpdateClassification",
                  "UpdateClassification desc",
                  "DataClassification",
                  "DataClassification desc",
                  "ProcessingEmployeeCode",
                  "ProcessingEmployeeCode desc",
                  "Dateprocessed",
                  "Dateprocessed desc",
                  "ProcessingTime",
                  "ProcessingTime desc",
                  "Destination",
                  "Destination desc",
                  "Destinationconstructionarea",
                  "Destinationconstructionarea desc",
                  "Destinationshippingpoint",
                  "Destinationshippingpoint desc",
                  "Partnumber",
                  "Partnumber desc",
                  "Processcodefinalprocess",
                  "Processcodefinalprocess desc",
                  "Deliverydestination",
                  "Deliverydestination desc",
                  "DESTINATSTRUCTEAREA",
                  "DESTINATSTRUCTEAREA desc",
                  "Receivingplace",
                  "Receivingplace desc",
                  "Address",
                  "Address desc",
                  "Applicablestartdateofdelivery",
                  "Applicablestartdateofdelivery desc",
                  "Applicableenddateofdelivery",
                  "Applicableenddateofdelivery desc",
                  "Orderer",
                  "Orderer desc",
                  "Orderersoffice",
                  "Orderersoffice desc",
                  "Orderingparty",
                  "Orderingparty desc",
                  "Orderersconstructionarea",
                  "Orderersconstructionarea desc",
                  "OrdererReceipt",
                  "OrdererReceipt desc",
                  "Number",
                  "Number desc",
                  "Itemname",
                  "Itemname desc",
                  "Numberofboxes",
                  "Numberofboxes desc",
                  "Boxtype",
                  "Boxtype desc",
                  "Unit",
                  "Unit desc",
                  "ShelfNo",
                  "ShelfNo desc",
                  "Partsperson",
                  "Partsperson desc",
                  "Palletclassification",
                  "Palletclassification desc",
                  "Specialnote1Referenceinformation1",
                  "Specialnote1Referenceinformation1 desc",
                  "Specialnote2Referenceinformation2",
                  "Specialnote2Referenceinformation2 desc",
                  "Specialnote3Referenceinformation3",
                  "Specialnote3Referenceinformation3 desc",
                  "Kanbanreadingclassification",
                  "Kanbanreadingclassification desc",
                  "Arrangementclassification",
                  "Arrangementclassification desc",
                  "Kanbancycleclassification",
                  "Kanbancycleclassification desc",
                  "Kanbancycleday",
                  "Kanbancycleday desc",
                  "Kanbancycle",
                  "Kanbancycle desc",
                  "Kanbancycleafter",
                  "Kanbancycleafter desc",
                  "KanbancycleWeekly",
                  "KanbancycleWeekly desc",
                  "Kanbanprocessingclassification",
                  "Kanbanprocessingclassification desc",
                  "Turnovercheckintervaldays",
                  "Turnovercheckintervaldays desc",
                  "Increasedecreasesheetdelaycoefficient",
                  "Increasedecreasesheetdelaycoefficient desc",
                  "UpperLimitSettingofOutgoingTransfersPerFlight",
                  "UpperLimitSettingofOutgoingTransfersPerFlight desc",
                  "Lowerlimitofoutgoingbalancepertransaction",
                  "Lowerlimitofoutgoingbalancepertransaction desc",
                  "Upperlimitofoutgoingbalanceperdelivery",
                  "Upperlimitofoutgoingbalanceperdelivery desc",
                  "Outfeedperrunoutlowerlimitsetting",
                  "Outfeedperrunoutlowerlimitsetting desc",
                  "Upperlimitofrunoutperdelivery",
                  "Upperlimitofrunoutperdelivery desc",
                  "LowLimitofOutfeedActionSetting",
                  "LowLimitofOutfeedActionSetting desc",
                  "UpperLimitofVariationofRealNumberofInputs",
                  "UpperLimitofVariationofRealNumberofInputs desc",
                  "Actualinputfluctuationlowerlimit",
                  "Actualinputfluctuationlowerlimit desc",
                  "ClassificationofKanbanissue",
                  "ClassificationofKanbanissue desc",
                  "ResponsedeliverydateLT",
                  "ResponsedeliverydateLT desc",
                  "Deliverydateconfirmationrelayclassification",
                  "Deliverydateconfirmationrelayclassification desc",
                  "Deliverydateconfirmationclassification",
                  "Deliverydateconfirmationclassification desc",
                  "Backendprocesspartnumber",
                  "Backendprocesspartnumber desc",
                  "Backendprocesscode",
                  "Backendprocesscode desc",
                  "UpdateDate",
                  "UpdateDate desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "BasicOrderMasterJournalReceivedID",
                  "UpdateClassification",
                  "DataClassification",
                  "ProcessingEmployeeCode",
                  "Dateprocessed",
                  "ProcessingTime",
                  "Destination",
                  "Destinationconstructionarea",
                  "Destinationshippingpoint",
                  "Partnumber",
                  "Processcodefinalprocess",
                  "Deliverydestination",
                  "DESTINATSTRUCTEAREA",
                  "Receivingplace",
                  "Address",
                  "Applicablestartdateofdelivery",
                  "Applicableenddateofdelivery",
                  "Orderer",
                  "Orderersoffice",
                  "Orderingparty",
                  "Orderersconstructionarea",
                  "OrdererReceipt",
                  "Number",
                  "Itemname",
                  "Numberofboxes",
                  "Boxtype",
                  "Unit",
                  "ShelfNo",
                  "Partsperson",
                  "Palletclassification",
                  "Specialnote1Referenceinformation1",
                  "Specialnote2Referenceinformation2",
                  "Specialnote3Referenceinformation3",
                  "Kanbanreadingclassification",
                  "Arrangementclassification",
                  "Kanbancycleclassification",
                  "Kanbancycleday",
                  "Kanbancycle",
                  "Kanbancycleafter",
                  "KanbancycleWeekly",
                  "Kanbanprocessingclassification",
                  "Turnovercheckintervaldays",
                  "Increasedecreasesheetdelaycoefficient",
                  "UpperLimitSettingofOutgoingTransfersPerFlight",
                  "Lowerlimitofoutgoingbalancepertransaction",
                  "Upperlimitofoutgoingbalanceperdelivery",
                  "Outfeedperrunoutlowerlimitsetting",
                  "Upperlimitofrunoutperdelivery",
                  "LowLimitofOutfeedActionSetting",
                  "UpperLimitofVariationofRealNumberofInputs",
                  "Actualinputfluctuationlowerlimit",
                  "ClassificationofKanbanissue",
                  "ResponsedeliverydateLT",
                  "Deliverydateconfirmationrelayclassification",
                  "Deliverydateconfirmationclassification",
                  "Backendprocesspartnumber",
                  "Backendprocesscode",
                  "UpdateDate"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved basic order master journal received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of BasicOrderMasterJournalReceived",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogService.BasicOrderMasterJournalReceived"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single basic order master journal received.",
        "tags": [
          "BasicOrderMasterJournalReceived"
        ],
        "requestBody": {
          "description": "New basic order master journal received",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogService.BasicOrderMasterJournalReceived-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created basic order master journal received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogService.BasicOrderMasterJournalReceived"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/BasicOrderMasterJournalReceived({BasicOrderMasterJournalReceivedID})": {
      "parameters": [
        {
          "description": "key: BasicOrderMasterJournalReceivedID",
          "in": "path",
          "name": "BasicOrderMasterJournalReceivedID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single basic order master journal received.",
        "tags": [
          "BasicOrderMasterJournalReceived"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "BasicOrderMasterJournalReceivedID",
                  "UpdateClassification",
                  "DataClassification",
                  "ProcessingEmployeeCode",
                  "Dateprocessed",
                  "ProcessingTime",
                  "Destination",
                  "Destinationconstructionarea",
                  "Destinationshippingpoint",
                  "Partnumber",
                  "Processcodefinalprocess",
                  "Deliverydestination",
                  "DESTINATSTRUCTEAREA",
                  "Receivingplace",
                  "Address",
                  "Applicablestartdateofdelivery",
                  "Applicableenddateofdelivery",
                  "Orderer",
                  "Orderersoffice",
                  "Orderingparty",
                  "Orderersconstructionarea",
                  "OrdererReceipt",
                  "Number",
                  "Itemname",
                  "Numberofboxes",
                  "Boxtype",
                  "Unit",
                  "ShelfNo",
                  "Partsperson",
                  "Palletclassification",
                  "Specialnote1Referenceinformation1",
                  "Specialnote2Referenceinformation2",
                  "Specialnote3Referenceinformation3",
                  "Kanbanreadingclassification",
                  "Arrangementclassification",
                  "Kanbancycleclassification",
                  "Kanbancycleday",
                  "Kanbancycle",
                  "Kanbancycleafter",
                  "KanbancycleWeekly",
                  "Kanbanprocessingclassification",
                  "Turnovercheckintervaldays",
                  "Increasedecreasesheetdelaycoefficient",
                  "UpperLimitSettingofOutgoingTransfersPerFlight",
                  "Lowerlimitofoutgoingbalancepertransaction",
                  "Upperlimitofoutgoingbalanceperdelivery",
                  "Outfeedperrunoutlowerlimitsetting",
                  "Upperlimitofrunoutperdelivery",
                  "LowLimitofOutfeedActionSetting",
                  "UpperLimitofVariationofRealNumberofInputs",
                  "Actualinputfluctuationlowerlimit",
                  "ClassificationofKanbanissue",
                  "ResponsedeliverydateLT",
                  "Deliverydateconfirmationrelayclassification",
                  "Deliverydateconfirmationclassification",
                  "Backendprocesspartnumber",
                  "Backendprocesscode",
                  "UpdateDate"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved basic order master journal received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogService.BasicOrderMasterJournalReceived"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single basic order master journal received.",
        "tags": [
          "BasicOrderMasterJournalReceived"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogService.BasicOrderMasterJournalReceived-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single basic order master journal received.",
        "tags": [
          "BasicOrderMasterJournalReceived"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/BasicOrderMasterJournalReceivedB": {
      "get": {
        "summary": "Retrieve a list of basic order master journal received b.",
        "tags": [
          "BasicOrderMasterJournalReceivedB"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "BasicOrderMasterJournalReceivedBID",
                  "BasicOrderMasterJournalReceivedBID desc",
                  "UpdateClassification",
                  "UpdateClassification desc",
                  "DataClassification",
                  "DataClassification desc",
                  "ProcessingEmployeeCode",
                  "ProcessingEmployeeCode desc",
                  "Dateprocessed",
                  "Dateprocessed desc",
                  "ProcessingTime",
                  "ProcessingTime desc",
                  "Destination",
                  "Destination desc",
                  "Destinationconstructionarea",
                  "Destinationconstructionarea desc",
                  "Destinationshippingpoint",
                  "Destinationshippingpoint desc",
                  "Partnumber",
                  "Partnumber desc",
                  "Processcode",
                  "Processcode desc",
                  "Deliverydestination",
                  "Deliverydestination desc",
                  "Deliveredto",
                  "Deliveredto desc",
                  "Receivingplace",
                  "Receivingplace desc",
                  "Address",
                  "Address desc",
                  "Applicablestartdateofdelivery",
                  "Applicablestartdateofdelivery desc",
                  "Applicableenddateofdelivery",
                  "Applicableenddateofdelivery desc",
                  "Orderingdelivery",
                  "Orderingdelivery desc",
                  "Orderavailability",
                  "Orderavailability desc",
                  "UpperLimitRateperFlight",
                  "UpperLimitRateperFlight desc",
                  "Lowerlimitofdispatchperflight",
                  "Lowerlimitofdispatchperflight desc",
                  "Maximumnumberofpiecesperdelivery",
                  "Maximumnumberofpiecesperdelivery desc",
                  "Lowerlimitofallocationperflight",
                  "Lowerlimitofallocationperflight desc",
                  "Directequalizationsetting",
                  "Directequalizationsetting desc",
                  "UpdateDate",
                  "UpdateDate desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "BasicOrderMasterJournalReceivedBID",
                  "UpdateClassification",
                  "DataClassification",
                  "ProcessingEmployeeCode",
                  "Dateprocessed",
                  "ProcessingTime",
                  "Destination",
                  "Destinationconstructionarea",
                  "Destinationshippingpoint",
                  "Partnumber",
                  "Processcode",
                  "Deliverydestination",
                  "Deliveredto",
                  "Receivingplace",
                  "Address",
                  "Applicablestartdateofdelivery",
                  "Applicableenddateofdelivery",
                  "Orderingdelivery",
                  "Orderavailability",
                  "UpperLimitRateperFlight",
                  "Lowerlimitofdispatchperflight",
                  "Maximumnumberofpiecesperdelivery",
                  "Lowerlimitofallocationperflight",
                  "Directequalizationsetting",
                  "UpdateDate"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved basic order master journal received b",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of BasicOrderMasterJournalReceivedB",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogService.BasicOrderMasterJournalReceivedB"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single basic order master journal received b.",
        "tags": [
          "BasicOrderMasterJournalReceivedB"
        ],
        "requestBody": {
          "description": "New basic order master journal received b",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogService.BasicOrderMasterJournalReceivedB-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created basic order master journal received b",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogService.BasicOrderMasterJournalReceivedB"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/BasicOrderMasterJournalReceivedB({BasicOrderMasterJournalReceivedBID})": {
      "parameters": [
        {
          "description": "key: BasicOrderMasterJournalReceivedBID",
          "in": "path",
          "name": "BasicOrderMasterJournalReceivedBID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single basic order master journal received b.",
        "tags": [
          "BasicOrderMasterJournalReceivedB"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "BasicOrderMasterJournalReceivedBID",
                  "UpdateClassification",
                  "DataClassification",
                  "ProcessingEmployeeCode",
                  "Dateprocessed",
                  "ProcessingTime",
                  "Destination",
                  "Destinationconstructionarea",
                  "Destinationshippingpoint",
                  "Partnumber",
                  "Processcode",
                  "Deliverydestination",
                  "Deliveredto",
                  "Receivingplace",
                  "Address",
                  "Applicablestartdateofdelivery",
                  "Applicableenddateofdelivery",
                  "Orderingdelivery",
                  "Orderavailability",
                  "UpperLimitRateperFlight",
                  "Lowerlimitofdispatchperflight",
                  "Maximumnumberofpiecesperdelivery",
                  "Lowerlimitofallocationperflight",
                  "Directequalizationsetting",
                  "UpdateDate"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved basic order master journal received b",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogService.BasicOrderMasterJournalReceivedB"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single basic order master journal received b.",
        "tags": [
          "BasicOrderMasterJournalReceivedB"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogService.BasicOrderMasterJournalReceivedB-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single basic order master journal received b.",
        "tags": [
          "BasicOrderMasterJournalReceivedB"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/BasicOrderMasterJournalReceivedR": {
      "get": {
        "summary": "Retrieve a list of basic order master journal received r.",
        "tags": [
          "BasicOrderMasterJournalReceivedR"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "BasicOrderMasterJournalReceivedRID",
                  "BasicOrderMasterJournalReceivedRID desc",
                  "UpdateDistinction",
                  "UpdateDistinction desc",
                  "Differentiationofdata",
                  "Differentiationofdata desc",
                  "ProcessingEmployeeConcepts",
                  "ProcessingEmployeeConcepts desc",
                  "Processingyearandmonth",
                  "Processingyearandmonth desc",
                  "Processingtime",
                  "Processingtime desc",
                  "Processingfirst",
                  "Processingfirst desc",
                  "Processingworkarea",
                  "Processingworkarea desc",
                  "Teshigashirafactory",
                  "Teshigashirafactory desc",
                  "Numberofitems",
                  "Numberofitems desc",
                  "Worksymbol",
                  "Worksymbol desc",
                  "Inclusion",
                  "Inclusion desc",
                  "Inclusionoffirstworkarea",
                  "Inclusionoffirstworkarea desc",
                  "Includefirst",
                  "Includefirst desc",
                  "Location",
                  "Location desc",
                  "Applicablestartdate",
                  "Applicablestartdate desc",
                  "Applicableenddate",
                  "Applicableenddate desc",
                  "Orderofwork",
                  "Orderofwork desc",
                  "PreviousworksInclusion",
                  "PreviousworksInclusion desc",
                  "FormerworkInclusionzone",
                  "FormerworkInclusionzone desc",
                  "PreviousworkInclusionoftheformerworksite",
                  "PreviousworkInclusionoftheformerworksite desc",
                  "Inclusionabbreviation",
                  "Inclusionabbreviation desc",
                  "Subprojectincorporatedfirst",
                  "Subprojectincorporatedfirst desc",
                  "Subengineeringworkareaincorporatedfirst",
                  "Subengineeringworkareaincorporatedfirst desc",
                  "Subprojectsincorporatedfirst",
                  "Subprojectsincorporatedfirst desc",
                  "Intermediateworks",
                  "Intermediateworks desc",
                  "Intermediatework",
                  "Intermediatework desc",
                  "theintermediateworkarea",
                  "theintermediateworkarea desc",
                  "UpdateDate",
                  "UpdateDate desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "BasicOrderMasterJournalReceivedRID",
                  "UpdateDistinction",
                  "Differentiationofdata",
                  "ProcessingEmployeeConcepts",
                  "Processingyearandmonth",
                  "Processingtime",
                  "Processingfirst",
                  "Processingworkarea",
                  "Teshigashirafactory",
                  "Numberofitems",
                  "Worksymbol",
                  "Inclusion",
                  "Inclusionoffirstworkarea",
                  "Includefirst",
                  "Location",
                  "Applicablestartdate",
                  "Applicableenddate",
                  "Orderofwork",
                  "PreviousworksInclusion",
                  "FormerworkInclusionzone",
                  "PreviousworkInclusionoftheformerworksite",
                  "Inclusionabbreviation",
                  "Subprojectincorporatedfirst",
                  "Subengineeringworkareaincorporatedfirst",
                  "Subprojectsincorporatedfirst",
                  "Intermediateworks",
                  "Intermediatework",
                  "theintermediateworkarea",
                  "UpdateDate"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved basic order master journal received r",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of BasicOrderMasterJournalReceivedR",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogService.BasicOrderMasterJournalReceivedR"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single basic order master journal received r.",
        "tags": [
          "BasicOrderMasterJournalReceivedR"
        ],
        "requestBody": {
          "description": "New basic order master journal received r",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogService.BasicOrderMasterJournalReceivedR-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created basic order master journal received r",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogService.BasicOrderMasterJournalReceivedR"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/BasicOrderMasterJournalReceivedR({BasicOrderMasterJournalReceivedRID})": {
      "parameters": [
        {
          "description": "key: BasicOrderMasterJournalReceivedRID",
          "in": "path",
          "name": "BasicOrderMasterJournalReceivedRID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single basic order master journal received r.",
        "tags": [
          "BasicOrderMasterJournalReceivedR"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "BasicOrderMasterJournalReceivedRID",
                  "UpdateDistinction",
                  "Differentiationofdata",
                  "ProcessingEmployeeConcepts",
                  "Processingyearandmonth",
                  "Processingtime",
                  "Processingfirst",
                  "Processingworkarea",
                  "Teshigashirafactory",
                  "Numberofitems",
                  "Worksymbol",
                  "Inclusion",
                  "Inclusionoffirstworkarea",
                  "Includefirst",
                  "Location",
                  "Applicablestartdate",
                  "Applicableenddate",
                  "Orderofwork",
                  "PreviousworksInclusion",
                  "FormerworkInclusionzone",
                  "PreviousworkInclusionoftheformerworksite",
                  "Inclusionabbreviation",
                  "Subprojectincorporatedfirst",
                  "Subengineeringworkareaincorporatedfirst",
                  "Subprojectsincorporatedfirst",
                  "Intermediateworks",
                  "Intermediatework",
                  "theintermediateworkarea",
                  "UpdateDate"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved basic order master journal received r",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogService.BasicOrderMasterJournalReceivedR"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single basic order master journal received r.",
        "tags": [
          "BasicOrderMasterJournalReceivedR"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogService.BasicOrderMasterJournalReceivedR-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single basic order master journal received r.",
        "tags": [
          "BasicOrderMasterJournalReceivedR"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Countries": {
      "get": {
        "summary": "Retrieve a list of countries.",
        "tags": [
          "Countries"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved countries",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Countries",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogService.Countries"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single country.",
        "tags": [
          "Countries"
        ],
        "requestBody": {
          "description": "New country",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogService.Countries-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created country",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogService.Countries"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Countries('{code}')": {
      "parameters": [
        {
          "description": "key: code",
          "in": "path",
          "name": "code",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 3
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single country.",
        "tags": [
          "Countries"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved country",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogService.Countries"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single country.",
        "tags": [
          "Countries"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogService.Countries-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single country.",
        "tags": [
          "Countries"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Countries('{code}')/texts": {
      "parameters": [
        {
          "description": "key: code",
          "in": "path",
          "name": "code",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 3
          }
        }
      ],
      "get": {
        "summary": "Retrieve a list of texts of a country.",
        "tags": [
          "Countries",
          "Countries_texts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved texts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Countries_texts",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogService.Countries_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single text of a country.",
        "tags": [
          "Countries",
          "Countries_texts"
        ],
        "requestBody": {
          "description": "New text",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogService.Countries_texts-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created text",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogService.Countries_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Countries('{code}')/localized": {
      "parameters": [
        {
          "description": "key: code",
          "in": "path",
          "name": "code",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 3
          }
        }
      ],
      "get": {
        "summary": "Retrieve localized of a country.",
        "tags": [
          "Countries",
          "Countries_texts"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved localized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogService.Countries_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Countries_texts": {
      "get": {
        "summary": "Retrieve a list of countries_texts.",
        "tags": [
          "Countries_texts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved countries_texts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Countries_texts",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogService.Countries_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single countries_text.",
        "tags": [
          "Countries_texts"
        ],
        "requestBody": {
          "description": "New countries_text",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogService.Countries_texts-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created countries_text",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogService.Countries_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Countries_texts(locale='{locale}',code='{code}')": {
      "parameters": [
        {
          "description": "key: locale",
          "in": "path",
          "name": "locale",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 14
          }
        },
        {
          "description": "key: code",
          "in": "path",
          "name": "code",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 3
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single countries_text.",
        "tags": [
          "Countries_texts"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved countries_text",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogService.Countries_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single countries_text.",
        "tags": [
          "Countries_texts"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogService.Countries_texts-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single countries_text.",
        "tags": [
          "Countries_texts"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/$batch": {
      "post": {
        "summary": "Send a group of requests",
        "description": "Group multiple requests into a single request payload, see [Batch Requests](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_BatchRequests).\n\n*Please note that \"Try it out\" is not supported for this request.*",
        "tags": [
          "Batch Requests"
        ],
        "requestBody": {
          "required": true,
          "description": "Batch request",
          "content": {
            "multipart/mixed;boundary=request-separator": {
              "schema": {
                "type": "string"
              },
              "example": "--request-separator\nContent-Type: application/http\nContent-Transfer-Encoding: binary\n\nGET Interactions_Header HTTP/1.1\nAccept: application/json\n\n\n--request-separator--"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Batch response",
            "content": {
              "multipart/mixed": {
                "schema": {
                  "type": "string"
                },
                "example": "--response-separator\nContent-Type: application/http\n\nHTTP/1.1 200 OK\nContent-Type: application/json\n\n{...}\n--response-separator--"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CatalogService.ActualWorkTime": {
        "title": "ActualWorkTime",
        "type": "object",
        "properties": {
          "ActualWorkTimeID": {
            "type": "integer",
            "format": "int32"
          },
          "WorkPerformanceID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "StartTime": {
            "type": "string",
            "format": "time",
            "example": "15:51:04",
            "nullable": true
          },
          "EndTime": {
            "type": "string",
            "format": "time",
            "example": "15:51:04",
            "nullable": true
          },
          "CreateUser": {
            "type": "string",
            "nullable": true
          },
          "CreateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          },
          "UpdateUser": {
            "type": "string",
            "nullable": true
          },
          "UpdateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          }
        }
      },
      "CatalogService.ActualWorkTime-create": {
        "title": "ActualWorkTime (for create)",
        "type": "object",
        "properties": {
          "ActualWorkTimeID": {
            "type": "integer",
            "format": "int32"
          },
          "WorkPerformanceID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "StartTime": {
            "type": "string",
            "format": "time",
            "example": "15:51:04",
            "nullable": true
          },
          "EndTime": {
            "type": "string",
            "format": "time",
            "example": "15:51:04",
            "nullable": true
          },
          "CreateUser": {
            "type": "string",
            "nullable": true
          },
          "CreateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          },
          "UpdateUser": {
            "type": "string",
            "nullable": true
          },
          "UpdateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          }
        },
        "required": [
          "ActualWorkTimeID"
        ]
      },
      "CatalogService.ActualWorkTime-update": {
        "title": "ActualWorkTime (for update)",
        "type": "object",
        "properties": {
          "WorkPerformanceID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "StartTime": {
            "type": "string",
            "format": "time",
            "example": "15:51:04",
            "nullable": true
          },
          "EndTime": {
            "type": "string",
            "format": "time",
            "example": "15:51:04",
            "nullable": true
          },
          "CreateUser": {
            "type": "string",
            "nullable": true
          },
          "CreateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          },
          "UpdateUser": {
            "type": "string",
            "nullable": true
          },
          "UpdateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          }
        }
      },
      "CatalogService.BasicOrderMasterJournalReceived": {
        "title": "BasicOrderMasterJournalReceived",
        "type": "object",
        "properties": {
          "BasicOrderMasterJournalReceivedID": {
            "type": "integer",
            "format": "int32"
          },
          "UpdateClassification": {
            "type": "string",
            "nullable": true
          },
          "DataClassification": {
            "type": "string",
            "nullable": true
          },
          "ProcessingEmployeeCode": {
            "type": "string",
            "nullable": true
          },
          "Dateprocessed": {
            "type": "string",
            "nullable": true
          },
          "ProcessingTime": {
            "type": "string",
            "nullable": true
          },
          "Destination": {
            "type": "string",
            "nullable": true
          },
          "Destinationconstructionarea": {
            "type": "string",
            "nullable": true
          },
          "Destinationshippingpoint": {
            "type": "string",
            "nullable": true
          },
          "Partnumber": {
            "type": "string",
            "nullable": true
          },
          "Processcodefinalprocess": {
            "type": "string",
            "nullable": true
          },
          "Deliverydestination": {
            "type": "string",
            "nullable": true
          },
          "DESTINATSTRUCTEAREA": {
            "type": "string",
            "nullable": true
          },
          "Receivingplace": {
            "type": "string",
            "nullable": true
          },
          "Address": {
            "type": "string",
            "nullable": true
          },
          "Applicablestartdateofdelivery": {
            "type": "string",
            "nullable": true
          },
          "Applicableenddateofdelivery": {
            "type": "string",
            "nullable": true
          },
          "Orderer": {
            "type": "string",
            "nullable": true
          },
          "Orderersoffice": {
            "type": "string",
            "nullable": true
          },
          "Orderingparty": {
            "type": "string",
            "nullable": true
          },
          "Orderersconstructionarea": {
            "type": "string",
            "nullable": true
          },
          "OrdererReceipt": {
            "type": "string",
            "nullable": true
          },
          "Number": {
            "type": "string",
            "nullable": true
          },
          "Itemname": {
            "type": "string",
            "nullable": true
          },
          "Numberofboxes": {
            "type": "string",
            "nullable": true
          },
          "Boxtype": {
            "type": "string",
            "nullable": true
          },
          "Unit": {
            "type": "string",
            "nullable": true
          },
          "ShelfNo": {
            "type": "string",
            "nullable": true
          },
          "Partsperson": {
            "type": "string",
            "nullable": true
          },
          "Palletclassification": {
            "type": "string",
            "nullable": true
          },
          "Specialnote1Referenceinformation1": {
            "type": "string",
            "nullable": true
          },
          "Specialnote2Referenceinformation2": {
            "type": "string",
            "nullable": true
          },
          "Specialnote3Referenceinformation3": {
            "type": "string",
            "nullable": true
          },
          "Kanbanreadingclassification": {
            "type": "string",
            "nullable": true
          },
          "Arrangementclassification": {
            "type": "string",
            "nullable": true
          },
          "Kanbancycleclassification": {
            "type": "string",
            "nullable": true
          },
          "Kanbancycleday": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Kanbancycle": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Kanbancycleafter": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "KanbancycleWeekly": {
            "type": "string",
            "nullable": true
          },
          "Kanbanprocessingclassification": {
            "type": "string",
            "nullable": true
          },
          "Turnovercheckintervaldays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Increasedecreasesheetdelaycoefficient": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "UpperLimitSettingofOutgoingTransfersPerFlight": {
            "type": "string",
            "nullable": true
          },
          "Lowerlimitofoutgoingbalancepertransaction": {
            "type": "string",
            "nullable": true
          },
          "Upperlimitofoutgoingbalanceperdelivery": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Outfeedperrunoutlowerlimitsetting": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Upperlimitofrunoutperdelivery": {
            "type": "string",
            "nullable": true
          },
          "LowLimitofOutfeedActionSetting": {
            "type": "string",
            "nullable": true
          },
          "UpperLimitofVariationofRealNumberofInputs": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Actualinputfluctuationlowerlimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ClassificationofKanbanissue": {
            "type": "string",
            "nullable": true
          },
          "ResponsedeliverydateLT": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Deliverydateconfirmationrelayclassification": {
            "type": "string",
            "nullable": true
          },
          "Deliverydateconfirmationclassification": {
            "type": "string",
            "nullable": true
          },
          "Backendprocesspartnumber": {
            "type": "string",
            "nullable": true
          },
          "Backendprocesscode": {
            "type": "string",
            "nullable": true
          },
          "UpdateDate": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04Z",
            "nullable": true
          }
        }
      },
      "CatalogService.BasicOrderMasterJournalReceived-create": {
        "title": "BasicOrderMasterJournalReceived (for create)",
        "type": "object",
        "properties": {
          "BasicOrderMasterJournalReceivedID": {
            "type": "integer",
            "format": "int32"
          },
          "UpdateClassification": {
            "type": "string",
            "nullable": true
          },
          "DataClassification": {
            "type": "string",
            "nullable": true
          },
          "ProcessingEmployeeCode": {
            "type": "string",
            "nullable": true
          },
          "Dateprocessed": {
            "type": "string",
            "nullable": true
          },
          "ProcessingTime": {
            "type": "string",
            "nullable": true
          },
          "Destination": {
            "type": "string",
            "nullable": true
          },
          "Destinationconstructionarea": {
            "type": "string",
            "nullable": true
          },
          "Destinationshippingpoint": {
            "type": "string",
            "nullable": true
          },
          "Partnumber": {
            "type": "string",
            "nullable": true
          },
          "Processcodefinalprocess": {
            "type": "string",
            "nullable": true
          },
          "Deliverydestination": {
            "type": "string",
            "nullable": true
          },
          "DESTINATSTRUCTEAREA": {
            "type": "string",
            "nullable": true
          },
          "Receivingplace": {
            "type": "string",
            "nullable": true
          },
          "Address": {
            "type": "string",
            "nullable": true
          },
          "Applicablestartdateofdelivery": {
            "type": "string",
            "nullable": true
          },
          "Applicableenddateofdelivery": {
            "type": "string",
            "nullable": true
          },
          "Orderer": {
            "type": "string",
            "nullable": true
          },
          "Orderersoffice": {
            "type": "string",
            "nullable": true
          },
          "Orderingparty": {
            "type": "string",
            "nullable": true
          },
          "Orderersconstructionarea": {
            "type": "string",
            "nullable": true
          },
          "OrdererReceipt": {
            "type": "string",
            "nullable": true
          },
          "Number": {
            "type": "string",
            "nullable": true
          },
          "Itemname": {
            "type": "string",
            "nullable": true
          },
          "Numberofboxes": {
            "type": "string",
            "nullable": true
          },
          "Boxtype": {
            "type": "string",
            "nullable": true
          },
          "Unit": {
            "type": "string",
            "nullable": true
          },
          "ShelfNo": {
            "type": "string",
            "nullable": true
          },
          "Partsperson": {
            "type": "string",
            "nullable": true
          },
          "Palletclassification": {
            "type": "string",
            "nullable": true
          },
          "Specialnote1Referenceinformation1": {
            "type": "string",
            "nullable": true
          },
          "Specialnote2Referenceinformation2": {
            "type": "string",
            "nullable": true
          },
          "Specialnote3Referenceinformation3": {
            "type": "string",
            "nullable": true
          },
          "Kanbanreadingclassification": {
            "type": "string",
            "nullable": true
          },
          "Arrangementclassification": {
            "type": "string",
            "nullable": true
          },
          "Kanbancycleclassification": {
            "type": "string",
            "nullable": true
          },
          "Kanbancycleday": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Kanbancycle": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Kanbancycleafter": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "KanbancycleWeekly": {
            "type": "string",
            "nullable": true
          },
          "Kanbanprocessingclassification": {
            "type": "string",
            "nullable": true
          },
          "Turnovercheckintervaldays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Increasedecreasesheetdelaycoefficient": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "UpperLimitSettingofOutgoingTransfersPerFlight": {
            "type": "string",
            "nullable": true
          },
          "Lowerlimitofoutgoingbalancepertransaction": {
            "type": "string",
            "nullable": true
          },
          "Upperlimitofoutgoingbalanceperdelivery": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Outfeedperrunoutlowerlimitsetting": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Upperlimitofrunoutperdelivery": {
            "type": "string",
            "nullable": true
          },
          "LowLimitofOutfeedActionSetting": {
            "type": "string",
            "nullable": true
          },
          "UpperLimitofVariationofRealNumberofInputs": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Actualinputfluctuationlowerlimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ClassificationofKanbanissue": {
            "type": "string",
            "nullable": true
          },
          "ResponsedeliverydateLT": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Deliverydateconfirmationrelayclassification": {
            "type": "string",
            "nullable": true
          },
          "Deliverydateconfirmationclassification": {
            "type": "string",
            "nullable": true
          },
          "Backendprocesspartnumber": {
            "type": "string",
            "nullable": true
          },
          "Backendprocesscode": {
            "type": "string",
            "nullable": true
          },
          "UpdateDate": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04Z",
            "nullable": true
          }
        },
        "required": [
          "BasicOrderMasterJournalReceivedID"
        ]
      },
      "CatalogService.BasicOrderMasterJournalReceived-update": {
        "title": "BasicOrderMasterJournalReceived (for update)",
        "type": "object",
        "properties": {
          "UpdateClassification": {
            "type": "string",
            "nullable": true
          },
          "DataClassification": {
            "type": "string",
            "nullable": true
          },
          "ProcessingEmployeeCode": {
            "type": "string",
            "nullable": true
          },
          "Dateprocessed": {
            "type": "string",
            "nullable": true
          },
          "ProcessingTime": {
            "type": "string",
            "nullable": true
          },
          "Destination": {
            "type": "string",
            "nullable": true
          },
          "Destinationconstructionarea": {
            "type": "string",
            "nullable": true
          },
          "Destinationshippingpoint": {
            "type": "string",
            "nullable": true
          },
          "Partnumber": {
            "type": "string",
            "nullable": true
          },
          "Processcodefinalprocess": {
            "type": "string",
            "nullable": true
          },
          "Deliverydestination": {
            "type": "string",
            "nullable": true
          },
          "DESTINATSTRUCTEAREA": {
            "type": "string",
            "nullable": true
          },
          "Receivingplace": {
            "type": "string",
            "nullable": true
          },
          "Address": {
            "type": "string",
            "nullable": true
          },
          "Applicablestartdateofdelivery": {
            "type": "string",
            "nullable": true
          },
          "Applicableenddateofdelivery": {
            "type": "string",
            "nullable": true
          },
          "Orderer": {
            "type": "string",
            "nullable": true
          },
          "Orderersoffice": {
            "type": "string",
            "nullable": true
          },
          "Orderingparty": {
            "type": "string",
            "nullable": true
          },
          "Orderersconstructionarea": {
            "type": "string",
            "nullable": true
          },
          "OrdererReceipt": {
            "type": "string",
            "nullable": true
          },
          "Number": {
            "type": "string",
            "nullable": true
          },
          "Itemname": {
            "type": "string",
            "nullable": true
          },
          "Numberofboxes": {
            "type": "string",
            "nullable": true
          },
          "Boxtype": {
            "type": "string",
            "nullable": true
          },
          "Unit": {
            "type": "string",
            "nullable": true
          },
          "ShelfNo": {
            "type": "string",
            "nullable": true
          },
          "Partsperson": {
            "type": "string",
            "nullable": true
          },
          "Palletclassification": {
            "type": "string",
            "nullable": true
          },
          "Specialnote1Referenceinformation1": {
            "type": "string",
            "nullable": true
          },
          "Specialnote2Referenceinformation2": {
            "type": "string",
            "nullable": true
          },
          "Specialnote3Referenceinformation3": {
            "type": "string",
            "nullable": true
          },
          "Kanbanreadingclassification": {
            "type": "string",
            "nullable": true
          },
          "Arrangementclassification": {
            "type": "string",
            "nullable": true
          },
          "Kanbancycleclassification": {
            "type": "string",
            "nullable": true
          },
          "Kanbancycleday": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Kanbancycle": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Kanbancycleafter": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "KanbancycleWeekly": {
            "type": "string",
            "nullable": true
          },
          "Kanbanprocessingclassification": {
            "type": "string",
            "nullable": true
          },
          "Turnovercheckintervaldays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Increasedecreasesheetdelaycoefficient": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "UpperLimitSettingofOutgoingTransfersPerFlight": {
            "type": "string",
            "nullable": true
          },
          "Lowerlimitofoutgoingbalancepertransaction": {
            "type": "string",
            "nullable": true
          },
          "Upperlimitofoutgoingbalanceperdelivery": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Outfeedperrunoutlowerlimitsetting": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Upperlimitofrunoutperdelivery": {
            "type": "string",
            "nullable": true
          },
          "LowLimitofOutfeedActionSetting": {
            "type": "string",
            "nullable": true
          },
          "UpperLimitofVariationofRealNumberofInputs": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Actualinputfluctuationlowerlimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ClassificationofKanbanissue": {
            "type": "string",
            "nullable": true
          },
          "ResponsedeliverydateLT": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Deliverydateconfirmationrelayclassification": {
            "type": "string",
            "nullable": true
          },
          "Deliverydateconfirmationclassification": {
            "type": "string",
            "nullable": true
          },
          "Backendprocesspartnumber": {
            "type": "string",
            "nullable": true
          },
          "Backendprocesscode": {
            "type": "string",
            "nullable": true
          },
          "UpdateDate": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04Z",
            "nullable": true
          }
        }
      },
      "CatalogService.BasicOrderMasterJournalReceivedB": {
        "title": "BasicOrderMasterJournalReceivedB",
        "type": "object",
        "properties": {
          "BasicOrderMasterJournalReceivedBID": {
            "type": "integer",
            "format": "int32"
          },
          "UpdateClassification": {
            "type": "string",
            "nullable": true
          },
          "DataClassification": {
            "type": "string",
            "nullable": true
          },
          "ProcessingEmployeeCode": {
            "type": "string",
            "nullable": true
          },
          "Dateprocessed": {
            "type": "string",
            "nullable": true
          },
          "ProcessingTime": {
            "type": "string",
            "nullable": true
          },
          "Destination": {
            "type": "string",
            "nullable": true
          },
          "Destinationconstructionarea": {
            "type": "string",
            "nullable": true
          },
          "Destinationshippingpoint": {
            "type": "string",
            "nullable": true
          },
          "Partnumber": {
            "type": "string",
            "nullable": true
          },
          "Processcode": {
            "type": "string",
            "nullable": true
          },
          "Deliverydestination": {
            "type": "string",
            "nullable": true
          },
          "Deliveredto": {
            "type": "string",
            "nullable": true
          },
          "Receivingplace": {
            "type": "string",
            "nullable": true
          },
          "Address": {
            "type": "string",
            "nullable": true
          },
          "Applicablestartdateofdelivery": {
            "type": "string",
            "nullable": true
          },
          "Applicableenddateofdelivery": {
            "type": "string",
            "nullable": true
          },
          "Orderingdelivery": {
            "type": "string",
            "nullable": true
          },
          "Orderavailability": {
            "type": "string",
            "nullable": true
          },
          "UpperLimitRateperFlight": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Lowerlimitofdispatchperflight": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Maximumnumberofpiecesperdelivery": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Lowerlimitofallocationperflight": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Directequalizationsetting": {
            "type": "string",
            "nullable": true
          },
          "UpdateDate": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04Z",
            "nullable": true
          }
        }
      },
      "CatalogService.BasicOrderMasterJournalReceivedB-create": {
        "title": "BasicOrderMasterJournalReceivedB (for create)",
        "type": "object",
        "properties": {
          "BasicOrderMasterJournalReceivedBID": {
            "type": "integer",
            "format": "int32"
          },
          "UpdateClassification": {
            "type": "string",
            "nullable": true
          },
          "DataClassification": {
            "type": "string",
            "nullable": true
          },
          "ProcessingEmployeeCode": {
            "type": "string",
            "nullable": true
          },
          "Dateprocessed": {
            "type": "string",
            "nullable": true
          },
          "ProcessingTime": {
            "type": "string",
            "nullable": true
          },
          "Destination": {
            "type": "string",
            "nullable": true
          },
          "Destinationconstructionarea": {
            "type": "string",
            "nullable": true
          },
          "Destinationshippingpoint": {
            "type": "string",
            "nullable": true
          },
          "Partnumber": {
            "type": "string",
            "nullable": true
          },
          "Processcode": {
            "type": "string",
            "nullable": true
          },
          "Deliverydestination": {
            "type": "string",
            "nullable": true
          },
          "Deliveredto": {
            "type": "string",
            "nullable": true
          },
          "Receivingplace": {
            "type": "string",
            "nullable": true
          },
          "Address": {
            "type": "string",
            "nullable": true
          },
          "Applicablestartdateofdelivery": {
            "type": "string",
            "nullable": true
          },
          "Applicableenddateofdelivery": {
            "type": "string",
            "nullable": true
          },
          "Orderingdelivery": {
            "type": "string",
            "nullable": true
          },
          "Orderavailability": {
            "type": "string",
            "nullable": true
          },
          "UpperLimitRateperFlight": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Lowerlimitofdispatchperflight": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Maximumnumberofpiecesperdelivery": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Lowerlimitofallocationperflight": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Directequalizationsetting": {
            "type": "string",
            "nullable": true
          },
          "UpdateDate": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04Z",
            "nullable": true
          }
        },
        "required": [
          "BasicOrderMasterJournalReceivedBID"
        ]
      },
      "CatalogService.BasicOrderMasterJournalReceivedB-update": {
        "title": "BasicOrderMasterJournalReceivedB (for update)",
        "type": "object",
        "properties": {
          "UpdateClassification": {
            "type": "string",
            "nullable": true
          },
          "DataClassification": {
            "type": "string",
            "nullable": true
          },
          "ProcessingEmployeeCode": {
            "type": "string",
            "nullable": true
          },
          "Dateprocessed": {
            "type": "string",
            "nullable": true
          },
          "ProcessingTime": {
            "type": "string",
            "nullable": true
          },
          "Destination": {
            "type": "string",
            "nullable": true
          },
          "Destinationconstructionarea": {
            "type": "string",
            "nullable": true
          },
          "Destinationshippingpoint": {
            "type": "string",
            "nullable": true
          },
          "Partnumber": {
            "type": "string",
            "nullable": true
          },
          "Processcode": {
            "type": "string",
            "nullable": true
          },
          "Deliverydestination": {
            "type": "string",
            "nullable": true
          },
          "Deliveredto": {
            "type": "string",
            "nullable": true
          },
          "Receivingplace": {
            "type": "string",
            "nullable": true
          },
          "Address": {
            "type": "string",
            "nullable": true
          },
          "Applicablestartdateofdelivery": {
            "type": "string",
            "nullable": true
          },
          "Applicableenddateofdelivery": {
            "type": "string",
            "nullable": true
          },
          "Orderingdelivery": {
            "type": "string",
            "nullable": true
          },
          "Orderavailability": {
            "type": "string",
            "nullable": true
          },
          "UpperLimitRateperFlight": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Lowerlimitofdispatchperflight": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Maximumnumberofpiecesperdelivery": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Lowerlimitofallocationperflight": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Directequalizationsetting": {
            "type": "string",
            "nullable": true
          },
          "UpdateDate": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04Z",
            "nullable": true
          }
        }
      },
      "CatalogService.BasicOrderMasterJournalReceivedR": {
        "title": "BasicOrderMasterJournalReceivedR",
        "type": "object",
        "properties": {
          "BasicOrderMasterJournalReceivedRID": {
            "type": "integer",
            "format": "int32"
          },
          "UpdateDistinction": {
            "type": "string",
            "nullable": true
          },
          "Differentiationofdata": {
            "type": "string",
            "nullable": true
          },
          "ProcessingEmployeeConcepts": {
            "type": "string",
            "nullable": true
          },
          "Processingyearandmonth": {
            "type": "string",
            "nullable": true
          },
          "Processingtime": {
            "type": "string",
            "nullable": true
          },
          "Processingfirst": {
            "type": "string",
            "nullable": true
          },
          "Processingworkarea": {
            "type": "string",
            "nullable": true
          },
          "Teshigashirafactory": {
            "type": "string",
            "nullable": true
          },
          "Numberofitems": {
            "type": "string",
            "nullable": true
          },
          "Worksymbol": {
            "type": "string",
            "nullable": true
          },
          "Inclusion": {
            "type": "string",
            "nullable": true
          },
          "Inclusionoffirstworkarea": {
            "type": "string",
            "nullable": true
          },
          "Includefirst": {
            "type": "string",
            "nullable": true
          },
          "Location": {
            "type": "string",
            "nullable": true
          },
          "Applicablestartdate": {
            "type": "string",
            "nullable": true
          },
          "Applicableenddate": {
            "type": "string",
            "nullable": true
          },
          "Orderofwork": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PreviousworksInclusion": {
            "type": "string",
            "nullable": true
          },
          "FormerworkInclusionzone": {
            "type": "string",
            "nullable": true
          },
          "PreviousworkInclusionoftheformerworksite": {
            "type": "string",
            "nullable": true
          },
          "Inclusionabbreviation": {
            "type": "string",
            "nullable": true
          },
          "Subprojectincorporatedfirst": {
            "type": "string",
            "nullable": true
          },
          "Subengineeringworkareaincorporatedfirst": {
            "type": "string",
            "nullable": true
          },
          "Subprojectsincorporatedfirst": {
            "type": "string",
            "nullable": true
          },
          "Intermediateworks": {
            "type": "string",
            "nullable": true
          },
          "Intermediatework": {
            "type": "string",
            "nullable": true
          },
          "theintermediateworkarea": {
            "type": "string",
            "nullable": true
          },
          "UpdateDate": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04Z",
            "nullable": true
          }
        }
      },
      "CatalogService.BasicOrderMasterJournalReceivedR-create": {
        "title": "BasicOrderMasterJournalReceivedR (for create)",
        "type": "object",
        "properties": {
          "BasicOrderMasterJournalReceivedRID": {
            "type": "integer",
            "format": "int32"
          },
          "UpdateDistinction": {
            "type": "string",
            "nullable": true
          },
          "Differentiationofdata": {
            "type": "string",
            "nullable": true
          },
          "ProcessingEmployeeConcepts": {
            "type": "string",
            "nullable": true
          },
          "Processingyearandmonth": {
            "type": "string",
            "nullable": true
          },
          "Processingtime": {
            "type": "string",
            "nullable": true
          },
          "Processingfirst": {
            "type": "string",
            "nullable": true
          },
          "Processingworkarea": {
            "type": "string",
            "nullable": true
          },
          "Teshigashirafactory": {
            "type": "string",
            "nullable": true
          },
          "Numberofitems": {
            "type": "string",
            "nullable": true
          },
          "Worksymbol": {
            "type": "string",
            "nullable": true
          },
          "Inclusion": {
            "type": "string",
            "nullable": true
          },
          "Inclusionoffirstworkarea": {
            "type": "string",
            "nullable": true
          },
          "Includefirst": {
            "type": "string",
            "nullable": true
          },
          "Location": {
            "type": "string",
            "nullable": true
          },
          "Applicablestartdate": {
            "type": "string",
            "nullable": true
          },
          "Applicableenddate": {
            "type": "string",
            "nullable": true
          },
          "Orderofwork": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PreviousworksInclusion": {
            "type": "string",
            "nullable": true
          },
          "FormerworkInclusionzone": {
            "type": "string",
            "nullable": true
          },
          "PreviousworkInclusionoftheformerworksite": {
            "type": "string",
            "nullable": true
          },
          "Inclusionabbreviation": {
            "type": "string",
            "nullable": true
          },
          "Subprojectincorporatedfirst": {
            "type": "string",
            "nullable": true
          },
          "Subengineeringworkareaincorporatedfirst": {
            "type": "string",
            "nullable": true
          },
          "Subprojectsincorporatedfirst": {
            "type": "string",
            "nullable": true
          },
          "Intermediateworks": {
            "type": "string",
            "nullable": true
          },
          "Intermediatework": {
            "type": "string",
            "nullable": true
          },
          "theintermediateworkarea": {
            "type": "string",
            "nullable": true
          },
          "UpdateDate": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04Z",
            "nullable": true
          }
        },
        "required": [
          "BasicOrderMasterJournalReceivedRID"
        ]
      },
      "CatalogService.BasicOrderMasterJournalReceivedR-update": {
        "title": "BasicOrderMasterJournalReceivedR (for update)",
        "type": "object",
        "properties": {
          "UpdateDistinction": {
            "type": "string",
            "nullable": true
          },
          "Differentiationofdata": {
            "type": "string",
            "nullable": true
          },
          "ProcessingEmployeeConcepts": {
            "type": "string",
            "nullable": true
          },
          "Processingyearandmonth": {
            "type": "string",
            "nullable": true
          },
          "Processingtime": {
            "type": "string",
            "nullable": true
          },
          "Processingfirst": {
            "type": "string",
            "nullable": true
          },
          "Processingworkarea": {
            "type": "string",
            "nullable": true
          },
          "Teshigashirafactory": {
            "type": "string",
            "nullable": true
          },
          "Numberofitems": {
            "type": "string",
            "nullable": true
          },
          "Worksymbol": {
            "type": "string",
            "nullable": true
          },
          "Inclusion": {
            "type": "string",
            "nullable": true
          },
          "Inclusionoffirstworkarea": {
            "type": "string",
            "nullable": true
          },
          "Includefirst": {
            "type": "string",
            "nullable": true
          },
          "Location": {
            "type": "string",
            "nullable": true
          },
          "Applicablestartdate": {
            "type": "string",
            "nullable": true
          },
          "Applicableenddate": {
            "type": "string",
            "nullable": true
          },
          "Orderofwork": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PreviousworksInclusion": {
            "type": "string",
            "nullable": true
          },
          "FormerworkInclusionzone": {
            "type": "string",
            "nullable": true
          },
          "PreviousworkInclusionoftheformerworksite": {
            "type": "string",
            "nullable": true
          },
          "Inclusionabbreviation": {
            "type": "string",
            "nullable": true
          },
          "Subprojectincorporatedfirst": {
            "type": "string",
            "nullable": true
          },
          "Subengineeringworkareaincorporatedfirst": {
            "type": "string",
            "nullable": true
          },
          "Subprojectsincorporatedfirst": {
            "type": "string",
            "nullable": true
          },
          "Intermediateworks": {
            "type": "string",
            "nullable": true
          },
          "Intermediatework": {
            "type": "string",
            "nullable": true
          },
          "theintermediateworkarea": {
            "type": "string",
            "nullable": true
          },
          "UpdateDate": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04Z",
            "nullable": true
          }
        }
      },
      "CatalogService.Countries": {
        "title": "Countries",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          },
          "code": {
            "type": "string",
            "maxLength": 3
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogService.Countries_texts"
            }
          },
          "texts@odata.count": {
            "$ref": "#/components/schemas/count"
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogService.Countries_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "CatalogService.Countries-create": {
        "title": "Countries (for create)",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          },
          "code": {
            "type": "string",
            "maxLength": 3
          }
        },
        "required": [
          "code"
        ]
      },
      "CatalogService.Countries-update": {
        "title": "Countries (for update)",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          }
        }
      },
      "CatalogService.Countries_texts": {
        "title": "Countries_texts",
        "type": "object",
        "properties": {
          "locale": {
            "type": "string",
            "maxLength": 14
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          },
          "code": {
            "type": "string",
            "maxLength": 3
          }
        }
      },
      "CatalogService.Countries_texts-create": {
        "title": "Countries_texts (for create)",
        "type": "object",
        "properties": {
          "locale": {
            "type": "string",
            "maxLength": 14
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          },
          "code": {
            "type": "string",
            "maxLength": 3
          }
        },
        "required": [
          "locale",
          "code"
        ]
      },
      "CatalogService.Countries_texts-update": {
        "title": "Countries_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          }
        }
      },
      "CatalogService.DefectiveProductResults": {
        "title": "DefectiveProductResults",
        "type": "object",
        "properties": {
          "NumberOfDefectsID": {
            "type": "integer",
            "format": "int32"
          },
          "ProductPerformanceID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ProductNumber": {
            "type": "string",
            "nullable": true
          },
          "NumberOfSetUps": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "NumberOfDefects": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "BadCauseCodes": {
            "type": "string",
            "nullable": true
          },
          "EPRNM": {
            "type": "string",
            "nullable": true
          },
          "CreateUser": {
            "type": "string",
            "nullable": true
          },
          "CreateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          },
          "UpdateUser": {
            "type": "string",
            "nullable": true
          },
          "UpdateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          }
        }
      },
      "CatalogService.DefectiveProductResults-create": {
        "title": "DefectiveProductResults (for create)",
        "type": "object",
        "properties": {
          "NumberOfDefectsID": {
            "type": "integer",
            "format": "int32"
          },
          "ProductPerformanceID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ProductNumber": {
            "type": "string",
            "nullable": true
          },
          "NumberOfSetUps": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "NumberOfDefects": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "BadCauseCodes": {
            "type": "string",
            "nullable": true
          },
          "EPRNM": {
            "type": "string",
            "nullable": true
          },
          "CreateUser": {
            "type": "string",
            "nullable": true
          },
          "CreateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          },
          "UpdateUser": {
            "type": "string",
            "nullable": true
          },
          "UpdateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          }
        },
        "required": [
          "NumberOfDefectsID"
        ]
      },
      "CatalogService.DefectiveProductResults-update": {
        "title": "DefectiveProductResults (for update)",
        "type": "object",
        "properties": {
          "ProductPerformanceID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ProductNumber": {
            "type": "string",
            "nullable": true
          },
          "NumberOfSetUps": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "NumberOfDefects": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "BadCauseCodes": {
            "type": "string",
            "nullable": true
          },
          "EPRNM": {
            "type": "string",
            "nullable": true
          },
          "CreateUser": {
            "type": "string",
            "nullable": true
          },
          "CreateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          },
          "UpdateUser": {
            "type": "string",
            "nullable": true
          },
          "UpdateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          }
        }
      },
      "CatalogService.EquipmentActualTime": {
        "title": "EquipmentActualTime",
        "type": "object",
        "properties": {
          "EquipmentActualTimeID": {
            "type": "integer",
            "format": "int32"
          },
          "WorkPerformanceID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "StartTime": {
            "type": "string",
            "format": "time",
            "example": "15:51:04",
            "nullable": true
          },
          "EndTime": {
            "type": "string",
            "format": "time",
            "example": "15:51:04",
            "nullable": true
          },
          "CreateUser": {
            "type": "string",
            "nullable": true
          },
          "CreateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          },
          "UpdateUser": {
            "type": "string",
            "nullable": true
          },
          "UpdateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          }
        }
      },
      "CatalogService.EquipmentActualTime-create": {
        "title": "EquipmentActualTime (for create)",
        "type": "object",
        "properties": {
          "EquipmentActualTimeID": {
            "type": "integer",
            "format": "int32"
          },
          "WorkPerformanceID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "StartTime": {
            "type": "string",
            "format": "time",
            "example": "15:51:04",
            "nullable": true
          },
          "EndTime": {
            "type": "string",
            "format": "time",
            "example": "15:51:04",
            "nullable": true
          },
          "CreateUser": {
            "type": "string",
            "nullable": true
          },
          "CreateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          },
          "UpdateUser": {
            "type": "string",
            "nullable": true
          },
          "UpdateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          }
        },
        "required": [
          "EquipmentActualTimeID"
        ]
      },
      "CatalogService.EquipmentActualTime-update": {
        "title": "EquipmentActualTime (for update)",
        "type": "object",
        "properties": {
          "WorkPerformanceID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "StartTime": {
            "type": "string",
            "format": "time",
            "example": "15:51:04",
            "nullable": true
          },
          "EndTime": {
            "type": "string",
            "format": "time",
            "example": "15:51:04",
            "nullable": true
          },
          "CreateUser": {
            "type": "string",
            "nullable": true
          },
          "CreateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          },
          "UpdateUser": {
            "type": "string",
            "nullable": true
          },
          "UpdateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          }
        }
      },
      "CatalogService.Interactions_Header": {
        "title": "Interactions_Header",
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "ITEMS": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogService.Interactions_Items"
            }
          },
          "ITEMS@odata.count": {
            "$ref": "#/components/schemas/count"
          },
          "PARTNER": {
            "type": "string",
            "maxLength": 10,
            "nullable": true
          },
          "LOG_DATE": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04Z",
            "nullable": true
          },
          "BPCOUNTRY": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogService.Countries"
              }
            ],
            "nullable": true,
            "description": "{i18n>CountryCode.Description}"
          },
          "BPCOUNTRY_code": {
            "type": "string",
            "maxLength": 3,
            "nullable": true,
            "description": "{i18n>CountryCode.Description}"
          }
        }
      },
      "CatalogService.Interactions_Header-create": {
        "title": "Interactions_Header (for create)",
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "PARTNER": {
            "type": "string",
            "maxLength": 10,
            "nullable": true
          },
          "LOG_DATE": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04Z",
            "nullable": true
          },
          "BPCOUNTRY_code": {
            "type": "string",
            "maxLength": 3,
            "nullable": true,
            "description": "{i18n>CountryCode.Description}"
          }
        },
        "required": [
          "ID"
        ]
      },
      "CatalogService.Interactions_Header-update": {
        "title": "Interactions_Header (for update)",
        "type": "object",
        "properties": {
          "PARTNER": {
            "type": "string",
            "maxLength": 10,
            "nullable": true
          },
          "LOG_DATE": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04Z",
            "nullable": true
          },
          "BPCOUNTRY_code": {
            "type": "string",
            "maxLength": 3,
            "nullable": true,
            "description": "{i18n>CountryCode.Description}"
          }
        }
      },
      "CatalogService.Interactions_Items": {
        "title": "Interactions_Items",
        "type": "object",
        "properties": {
          "INTHeader": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogService.Interactions_Header"
              }
            ],
            "nullable": true
          },
          "INTHeader_ID": {
            "type": "integer",
            "format": "int32"
          },
          "TEXT_ID": {
            "type": "string",
            "maxLength": 10
          },
          "LANGU": {
            "type": "string",
            "maxLength": 2,
            "nullable": true
          },
          "LOGTEXT": {
            "type": "string",
            "maxLength": 1024,
            "nullable": true
          }
        }
      },
      "CatalogService.Interactions_Items-create": {
        "title": "Interactions_Items (for create)",
        "type": "object",
        "properties": {
          "INTHeader_ID": {
            "type": "integer",
            "format": "int32"
          },
          "TEXT_ID": {
            "type": "string",
            "maxLength": 10
          },
          "LANGU": {
            "type": "string",
            "maxLength": 2,
            "nullable": true
          },
          "LOGTEXT": {
            "type": "string",
            "maxLength": 1024,
            "nullable": true
          }
        },
        "required": [
          "INTHeader_ID",
          "TEXT_ID"
        ]
      },
      "CatalogService.Interactions_Items-update": {
        "title": "Interactions_Items (for update)",
        "type": "object",
        "properties": {
          "LANGU": {
            "type": "string",
            "maxLength": 2,
            "nullable": true
          },
          "LOGTEXT": {
            "type": "string",
            "maxLength": 1024,
            "nullable": true
          }
        }
      },
      "CatalogService.OtherActualTimes": {
        "title": "OtherActualTimes",
        "type": "object",
        "properties": {
          "OtherActualTimesID": {
            "type": "integer",
            "format": "int32"
          },
          "WorkPerformanceID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "AchievementCode": {
            "type": "string",
            "nullable": true
          },
          "Personnel": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "StartTime": {
            "type": "string",
            "format": "time",
            "example": "15:51:04",
            "nullable": true
          },
          "EndTime": {
            "type": "string",
            "format": "time",
            "example": "15:51:04",
            "nullable": true
          },
          "CreateUser": {
            "type": "string",
            "nullable": true
          },
          "CreateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          },
          "UpdateUser": {
            "type": "string",
            "nullable": true
          },
          "UpdateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          }
        }
      },
      "CatalogService.OtherActualTimes-create": {
        "title": "OtherActualTimes (for create)",
        "type": "object",
        "properties": {
          "OtherActualTimesID": {
            "type": "integer",
            "format": "int32"
          },
          "WorkPerformanceID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "AchievementCode": {
            "type": "string",
            "nullable": true
          },
          "Personnel": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "StartTime": {
            "type": "string",
            "format": "time",
            "example": "15:51:04",
            "nullable": true
          },
          "EndTime": {
            "type": "string",
            "format": "time",
            "example": "15:51:04",
            "nullable": true
          },
          "CreateUser": {
            "type": "string",
            "nullable": true
          },
          "CreateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          },
          "UpdateUser": {
            "type": "string",
            "nullable": true
          },
          "UpdateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          }
        },
        "required": [
          "OtherActualTimesID"
        ]
      },
      "CatalogService.OtherActualTimes-update": {
        "title": "OtherActualTimes (for update)",
        "type": "object",
        "properties": {
          "WorkPerformanceID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "AchievementCode": {
            "type": "string",
            "nullable": true
          },
          "Personnel": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "StartTime": {
            "type": "string",
            "format": "time",
            "example": "15:51:04",
            "nullable": true
          },
          "EndTime": {
            "type": "string",
            "format": "time",
            "example": "15:51:04",
            "nullable": true
          },
          "CreateUser": {
            "type": "string",
            "nullable": true
          },
          "CreateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          },
          "UpdateUser": {
            "type": "string",
            "nullable": true
          },
          "UpdateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          }
        }
      },
      "CatalogService.ProductPerformance": {
        "title": "ProductPerformance",
        "type": "object",
        "properties": {
          "ProductPerformanceID": {
            "type": "integer",
            "format": "int32"
          },
          "DailyReportDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          },
          "DayAndNight": {
            "type": "string",
            "nullable": true
          },
          "Group": {
            "type": "string",
            "nullable": true
          },
          "FacilityNo": {
            "type": "string",
            "nullable": true
          },
          "CreateUser": {
            "type": "string",
            "nullable": true
          },
          "CreateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          },
          "UpdateUser": {
            "type": "string",
            "nullable": true
          },
          "UpdateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          }
        }
      },
      "CatalogService.ProductPerformance-create": {
        "title": "ProductPerformance (for create)",
        "type": "object",
        "properties": {
          "ProductPerformanceID": {
            "type": "integer",
            "format": "int32"
          },
          "DailyReportDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          },
          "DayAndNight": {
            "type": "string",
            "nullable": true
          },
          "Group": {
            "type": "string",
            "nullable": true
          },
          "FacilityNo": {
            "type": "string",
            "nullable": true
          },
          "CreateUser": {
            "type": "string",
            "nullable": true
          },
          "CreateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          },
          "UpdateUser": {
            "type": "string",
            "nullable": true
          },
          "UpdateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          }
        },
        "required": [
          "ProductPerformanceID"
        ]
      },
      "CatalogService.ProductPerformance-update": {
        "title": "ProductPerformance (for update)",
        "type": "object",
        "properties": {
          "DailyReportDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          },
          "DayAndNight": {
            "type": "string",
            "nullable": true
          },
          "Group": {
            "type": "string",
            "nullable": true
          },
          "FacilityNo": {
            "type": "string",
            "nullable": true
          },
          "CreateUser": {
            "type": "string",
            "nullable": true
          },
          "CreateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          },
          "UpdateUser": {
            "type": "string",
            "nullable": true
          },
          "UpdateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          }
        }
      },
      "CatalogService.ProductResults": {
        "title": "ProductResults",
        "type": "object",
        "properties": {
          "NumberOfProductionsID": {
            "type": "integer",
            "format": "int32"
          },
          "ProductPerformanceID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ProductNumber": {
            "type": "string",
            "nullable": true
          },
          "NumberOfSetUps": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "NumberOfProductions": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "NumberOfPrograms": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Message": {
            "type": "string",
            "nullable": true
          },
          "CreateUser": {
            "type": "string",
            "nullable": true
          },
          "CreateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          },
          "UpdateUser": {
            "type": "string",
            "nullable": true
          },
          "UpdateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          }
        }
      },
      "CatalogService.ProductResults-create": {
        "title": "ProductResults (for create)",
        "type": "object",
        "properties": {
          "NumberOfProductionsID": {
            "type": "integer",
            "format": "int32"
          },
          "ProductPerformanceID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ProductNumber": {
            "type": "string",
            "nullable": true
          },
          "NumberOfSetUps": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "NumberOfProductions": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "NumberOfPrograms": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Message": {
            "type": "string",
            "nullable": true
          },
          "CreateUser": {
            "type": "string",
            "nullable": true
          },
          "CreateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          },
          "UpdateUser": {
            "type": "string",
            "nullable": true
          },
          "UpdateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          }
        },
        "required": [
          "NumberOfProductionsID"
        ]
      },
      "CatalogService.ProductResults-update": {
        "title": "ProductResults (for update)",
        "type": "object",
        "properties": {
          "ProductPerformanceID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ProductNumber": {
            "type": "string",
            "nullable": true
          },
          "NumberOfSetUps": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "NumberOfProductions": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "NumberOfPrograms": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Message": {
            "type": "string",
            "nullable": true
          },
          "CreateUser": {
            "type": "string",
            "nullable": true
          },
          "CreateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          },
          "UpdateUser": {
            "type": "string",
            "nullable": true
          },
          "UpdateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          }
        }
      },
      "CatalogService.WorkPerformance": {
        "title": "WorkPerformance",
        "type": "object",
        "properties": {
          "WorkPerformanceID": {
            "type": "integer",
            "format": "int32"
          },
          "DailyReportDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          },
          "DayAndNight": {
            "type": "string",
            "nullable": true
          },
          "Group": {
            "type": "string",
            "nullable": true
          },
          "FacilityNo": {
            "type": "string",
            "nullable": true
          },
          "CreateUser": {
            "type": "string",
            "nullable": true
          },
          "CreateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          },
          "UpdateUser": {
            "type": "string",
            "nullable": true
          },
          "UpdateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          }
        }
      },
      "CatalogService.WorkPerformance-create": {
        "title": "WorkPerformance (for create)",
        "type": "object",
        "properties": {
          "WorkPerformanceID": {
            "type": "integer",
            "format": "int32"
          },
          "DailyReportDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          },
          "DayAndNight": {
            "type": "string",
            "nullable": true
          },
          "Group": {
            "type": "string",
            "nullable": true
          },
          "FacilityNo": {
            "type": "string",
            "nullable": true
          },
          "CreateUser": {
            "type": "string",
            "nullable": true
          },
          "CreateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          },
          "UpdateUser": {
            "type": "string",
            "nullable": true
          },
          "UpdateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          }
        },
        "required": [
          "WorkPerformanceID"
        ]
      },
      "CatalogService.WorkPerformance-update": {
        "title": "WorkPerformance (for update)",
        "type": "object",
        "properties": {
          "DailyReportDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          },
          "DayAndNight": {
            "type": "string",
            "nullable": true
          },
          "Group": {
            "type": "string",
            "nullable": true
          },
          "FacilityNo": {
            "type": "string",
            "nullable": true
          },
          "CreateUser": {
            "type": "string",
            "nullable": true
          },
          "CreateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          },
          "UpdateUser": {
            "type": "string",
            "nullable": true
          },
          "UpdateDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          }
        }
      },
      "count": {
        "anyOf": [
          {
            "type": "number"
          },
          {
            "type": "string"
          }
        ],
        "description": "The number of entities in the collection. Available when using the [$count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount) query option."
      },
      "error": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "object",
            "required": [
              "code",
              "message"
            ],
            "properties": {
              "code": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "target": {
                "type": "string"
              },
              "details": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "target": {
                      "type": "string"
                    }
                  }
                }
              },
              "innererror": {
                "type": "object",
                "description": "The structure of this object is service-specific"
              }
            }
          }
        }
      }
    },
    "parameters": {
      "top": {
        "name": "$top",
        "in": "query",
        "description": "Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)",
        "schema": {
          "type": "integer",
          "minimum": 0
        },
        "example": 50
      },
      "skip": {
        "name": "$skip",
        "in": "query",
        "description": "Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)",
        "schema": {
          "type": "integer",
          "minimum": 0
        }
      },
      "count": {
        "name": "$count",
        "in": "query",
        "description": "Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)",
        "schema": {
          "type": "boolean"
        }
      },
      "search": {
        "name": "$search",
        "in": "query",
        "description": "Search items by search phrases, see [Searching](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionsearch)",
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "error": {
        "description": "Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        }
      }
    }
  }
}